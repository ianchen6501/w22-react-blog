{"version":3,"sources":["utils.js","WebAPI.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","contexts.js","pages/LoginPage/LoginPage.js","pages/NewPostPage/NewPostPage.js","pages/SinglePostPage/SinglePostPage.js","pages/RegisterPage/RegisterPage.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","login","username","password","fetch","method","headers","body","JSON","stringify","then","res","json","getMe","Container","styled","div","PostsContainer","PostContainer","PostTitle","Link","PostDate","PageControlerContainer","ul","Page","li","DeleteButton","button","PostRightContainer","LoadingPage","Post","post","handleDeletePost","to","id","title","Date","createdAt","toLocaleDateString","onClick","event","PageControler","pages","setPages","pagesArray","i","totalPages","push","map","pageNumber","currentPage","handleSetCurrentPage","Number","target","innerText","HomePage","useState","posts","setPosts","isLoadingPost","setIsLoadingPost","deletingPostToggle","setDeletingPostToggle","getAttribute","deletePost","useLayoutEffect","postsLength","length","pagesCount","Math","floor","slice","getCurrentPage","Banner","Body","AboutPage","AuthContext","createContext","ErrorMessage","InputContainer","Button","LoginPage","setUser","useContext","setUsername","setPassword","errorMessage","setErrormessage","history","useHistory","document","getElementsByTagName","script","createElement","innerHTML","appendChild","onSubmit","preventDefault","data","ok","message","response","toString","type","value","onChange","e","onclick","NewPostContainer","Section","Input","input","NewPostPage","setTitle","setBody","setErrorMessage","editor","ClassicEditor","onReady","console","log","newData","getData","replace","onBlur","onFocus","submitPost","SinglePostContainer","TitleContainer","Title","CreatedAt","setValue","useParams","useEffect","getPostsById","result","catch","error","toLocaleTimeString","nickname","setNickname","register","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","location","useLocation","user","as","pathname","CenterContainer","Footer","App","isLoadinGetMe","setIsLoadinGetMe","Provider","exact","path","ReactDOM","render","theme","colors","light_gray","black","getElementById"],"mappings":"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","file":"static/js/main.95945a07.chunk.js","sourcesContent":["const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token)\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME)\r\n}","import { getAuthToken } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=id&_order=desc`).then((res) => res.json())\r\n}\r\n\r\nexport const getPostsById = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json())\r\n}\r\n\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const register = (username, password, nickname) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const submitPost = (title, body) => {\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const deletePost = (event) => {\r\n  const id = Number(event.target.getAttribute('id'))\r\n  const token = getAuthToken()\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n}","import React, { useEffect, useLayoutEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\";\nimport {deletePost, getPosts} from '../../WebAPI'\n\nconst Container = styled.div `\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst PostsContainer = styled.div `\n  margin-top: 30px;\n  outline: solid rgb(0,0,0,0.2) 0.5px;\n`\n\nconst PostContainer = styled.div `\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  &:hover {\n    box-shadow: 0.5px 0.5px 2px 0px ;\n  }\n`\n\nconst PostTitle = styled(Link) `\n  font-size: 24px;\n  text-decoration: none;\n  color: #333;\n`\n\nconst PostDate = styled.div `\n  color: rgba(0, 0, 0, 0.8);\n`\n\nconst PageControlerContainer = styled.ul `\n  margin: 20px auto;\n  width: 100px;\n  display: flex;\n  justify-content: space-around;\n  list-style-type: none;\n`\n\nconst Page = styled.li `\n  font-size: 20px;\n  cursor: pointer;\n`\n\nconst DeleteButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n`\n\nconst PostRightContainer = styled.div `\n  display: flex;\n`\n\nconst LoadingPage = styled.div `\n  position: relative;\n  width: 100%;\n  top: 30vh;\n  text-align: center;\n  font-size: 40px;\n  color: rgb(0,0,0,0.1)\n  font-scale: bold;\n`\n\nfunction Post({post, handleDeletePost}) {\n\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.id}{\" . \"}{post.title}</PostTitle>\n      <PostRightContainer>\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n        <DeleteButton onClick={(event) => handleDeletePost(event) } id={post.id}>Delete</DeleteButton>\n      </PostRightContainer>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object\n}\n\nfunction PageControler({pages, setPages}) {\n  const pagesArray = []\n  for(let i=1; i <= pages.totalPages; i++) {\n    pagesArray.push(i)\n  }\n\n  function handleSetCurrentPage(pageNumber) {\n    setPages({\n      ...pages,\n      currentPage: pageNumber\n    })\n  }\n\n  return (\n    <PageControlerContainer>\n      {pagesArray.map(pageNumber => \n        <Page onClick={(event) => handleSetCurrentPage(Number(event.target.innerText))} key={pageNumber}>{pageNumber}</Page>\n      )}\n    </PageControlerContainer>\n  )\n}\n\nPageControler.propTypes = {\n  pages: PropTypes.object,\n  setPages: PropTypes.func\n}\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([])\n  const [pages, setPages] = useState({})\n  const [isLoadingPost, setIsLoadingPost] = useState(false)\n  const [deletingPostToggle, setDeletingPostToggle] = useState(false)\n  const capacity = 5\n\n  useLayoutEffect(() => {\n    setIsLoadingPost(true)\n    getPosts()\n    .then(posts => {\n      setPosts(posts)\n      setIsLoadingPost(false)\n      const postsLength = posts.length\n      const pagesCount = postsLength % capacity ? Math.floor(postsLength/capacity)+1 : Math.floor(postsLength/capacity)\n      setPages({\n        totalPages: pagesCount,\n        currentPage: 1\n      })\n    })\n  }, [deletingPostToggle])\n\n  function getCurrentPage(posts, pages) {\n    if(true) { \n      const currentPage = pages.currentPage\n      return posts.slice((currentPage-1)*capacity ,currentPage*capacity)\n    }\n    return\n  }\n\n  function handleDeletePost(event) { \n    deletePost(event).then(() => {\n      setDeletingPostToggle(!deletingPostToggle)\n    })\n  }\n\n  return (\n    <Container>\n        { !isLoadingPost && (\n          <PostsContainer>\n            { getCurrentPage(posts, pages).map(post => \n              <Post post={post} key={post.id} handleDeletePost={handleDeletePost}></Post>)\n            }\n          </PostsContainer>\n        )}\n      { !isLoadingPost && <PageControler pages={pages} setPages={setPages}></PageControler> }\n      { isLoadingPost && <LoadingPage>Loading</LoadingPage> }\n    </Container>\n  )\n}\n\nHomePage.propTypes = {\n  posts: PropTypes.object,\n  pages: PropTypes.object\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Banner = styled.div `\n  background: rgb(0,0,0,0.1);\n  width: 100vw;\n  height: 120px;\n  text-align: center;\n  font-size: 32px;\n  vertical-align: baseline;\n  padding-top: 60px;\n`\n\nconst Body = styled.div `\n  font-size: 26px;\n  text-align: center;\n  margin-top: 80px;\n`\n\n\nexport default function AboutPage() {\n\n  return (\n    <div>\n      <Banner>關於我們</Banner>\n      <Body>這是一個大家集體創作的部落格。<br />\n      你可以在這邊自由註冊、發文並觀看別人的文章。<br/>\n      enjoy writting!\n      </Body>\n    </div>\n\n  )\n}\n","import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)\r\n","import React, { useState, useContext, useEffect, useLayoutEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { login, getMe } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../contexts'\n\nconst ErrorMessage = styled.div `\n  color: red;\n  margin-top: 20px;\n`\n\nconst Container = styled.div `\n  position: relative;\n  left: 50%;\n  transform: translate(-50%,0px);\n  width: 30vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 30px;\n  background: white;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-radius: 5px;\n  border: solid 0.5px rgb(0,0,0,0.2);\n`\n\nconst InputContainer = styled.div `\n  padding-top: 10px;\n  padding-bottom: 10px;\n`\n\nconst Button = styled.button `\n  padding: 6px 10px;\n  border: none;\n  border-radius: 2px;\n  background: rgb(0,0,0,0.15);\n  font-size: 20px;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%,0px);\n  margin-top:10px;\n`\n\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrormessage] = useState('')\n  const history = useHistory()\n\n  useLayoutEffect(() => {\n    const body = document.getElementsByTagName('body')[0]\n    const script = document.createElement('script')\n    script.innerHTML = `\n      window.fbAsyncInit = function() {\n        FB.init({\n          appId      : '382475983013781',\n          cookie     : true,\n          xfbml      : true,\n          version    : 'v9.0'\n        });\n          \n        FB.AppEvents.logPageView();   \n          \n      };\n\n      (function(d, s, id){\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n\n      // FB.getLoginStatus(function(response) {\n      //   statusChangeCallback(response);\n      // });\n\n      function getLoginStatus() {\n        FB.getLoginStatus(function(response) {\n          statusChangeCallback(response);\n        });\n      }\n\n      setTimeout(() => {\n        getLoginStatus()\n      }, 5000)\n      \n\n      // This is called with the results from from FB.getLoginStatus().\n      function statusChangeCallback(response) {\n        console.log('statusChangeCallback');\n        console.log(response);\n        // The response object is returned with a status field that lets the\n        // app know the current login status of the person.\n        // Full docs on the response object can be found in the documentation\n        // for FB.getLoginStatus().\n        if (response.status === 'connected') {\n          // Logged into your app and Facebook.\n          testAPI();\n        } else if (response.status === 'not_authorized') {\n          // The person is logged into Facebook, but not your app.\n          document.getElementById('status').innerHTML = 'Please log ' +\n            'into this app.';\n        } else {\n          // The person is not logged into Facebook, so we're not sure if\n          // they are logged into this app or not.\n          document.getElementById('status').innerHTML = 'Please log ' +\n            'into Facebook.';\n        }\n      }\n\n      // This function is called when someone finishes with the Login\n      // Button.  See the onlogin handler attached to it in the sample\n      // code below.\n      function checkLoginState() {\n        FB.getLoginStatus(function(response) {\n          statusChangeCallback(response);\n        });\n      }\n\n      // Here we run a very simple test of the Graph API after login is\n      // successful.  See statusChangeCallback() for when this call is made.\n      function testAPI() {\n        console.log('Welcome!  Fetching your information.... ');\n        FB.api('/me', function(response) {\n          console.log('Successful login for: ' + response.name);\n          document.getElementById('status').innerHTML =\n            'Thanks for logging in, ' + response.name + '!';\n        });\n\n      }\n\n      function login() {\n        FB.login(function (response) {\n          /*console.log(response);*/\n        });\n      }\n      \n      function logout() {\n        FB.logout(function (response) {\n          /*console.log(response)*/\n        });\n      }\n    ` \n    body.appendChild(script)\n  })\n\n  const handleSubmit = (event) => {\n    setErrormessage(null)\n    event.preventDefault()\n    login(username, password).then(data => {\n      if(data.ok === 0) {\n        return setErrormessage(data.message)\n      }\n      setAuthToken(data.token)\n\n      getMe().then(response => {\n        if (response.ok !== 1) {\n          setAuthToken(null)\n          return setErrormessage(response.toString())\n        }\n        setUser(response.data)\n        history.push('/')\n      })\n    })\n  }\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <InputContainer>\n          username:{\" \"}\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}></input>\n        </InputContainer>\n        <InputContainer>\n          password:{\" \"}\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}></input>\n        </InputContainer>\n        <Button>登入</Button>\n      </form>\n      { errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage> }\n      <button onclick={() => login()}>登入</button>\n      {/* <button onclick={() => logout()}>登出</button> */}\n    </Container>\n  )\n}","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { submitPost } from '../../WebAPI'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { useHistory } from 'react-router-dom'\n\nconst NewPostContainer = styled.div `\n  height: 70%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  &:nth-child(3) {\n    width:100px;\n  }\n`\n\nconst Section = styled.div `\n  display: block;\n  width: 90vw;\n`\n\nconst Input = styled.input`\n  width: 100%;\n  height: 40px;\n  border: solid 0.1px rgb(0,0,0,0.2);\n  border-radius: 3px;\n  font-size:20px;\n`\n\nconst Button = styled.button`\n  padding: 8px 10px;\n  border: none;\n  font-size: 20px;\n  background: rgb(0,0,0,0.5);\n  border-radius: 5px;\n  cursor: pointer;\n  color: white;\n  margin-top: 30px;\n`\n\nconst ErrorMessage = styled.div `\n  color: red;\n`\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const history = useHistory()\n\n  function handleSubmit() {\n    if(title === '' || body === '') {\n      return setErrorMessage('請輸入資料')\n    }\n    submitPost(title, body).then(() => {\n      history.push('/')\n    })\n  }\n\n  return (\n    <NewPostContainer>\n      <Section>\n        <h2>Title</h2>\n        <Input value={title} onChange={(event) => {setTitle(event.target.value)}}></Input>\n      </Section>\n      <Section>\n        <h2>Body</h2>\n        <CKEditor \n          editor={ ClassicEditor }\n          value={body}\n          onReady={ editor => {\n              // You can store the \"editor\" and use when it is needed.\n              console.log( 'Editor is ready to use!', editor );\n          } }\n          onChange={ ( event, editor ) => {\n              const data = editor.getData();\n              let newData = data.replace('<p>', '')\n              newData = newData.replace('</p>', '')\n              setBody(newData)\n              console.log( { event, editor, newData } );\n          } }\n          onBlur={ ( event, editor ) => {\n              console.log( 'Blur.', editor );\n          } }\n          onFocus={ ( event, editor ) => {\n              console.log( 'Focus.', editor );\n          } }\n        />\n      </Section>\n      <Button onClick={handleSubmit}>Submit</Button>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </NewPostContainer>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport {\n  useParams,\n  Link\n} from \"react-router-dom\";\nimport { getPostsById } from '../../WebAPI'\n\nNewPostPage.propTypes = {\n  post: PropTypes.object\n}\n\nconst SinglePostContainer = styled.div `\n  width: 70vw;\n  margin: 0 auto;\n`\n\nconst TitleContainer = styled.div `\n  margin-top: 30px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Title = styled.div `\n  font-weight: bold;\n  font-size: 26px;\n  vertical-align: baseline;\n`\n\nconst CreatedAt = styled.div `\n  font-size: 20px;\n  vertical-align: bottom;\n  color: rgb(0,0,0,0.6);\n`\n\nconst Body = styled.div `\n  margin-top: 10px;\n  padding-top: 20px;\n  border-top: solid 0.5px rgb(0,0,0,0.3);\n  font-size:26px;\n`\n\nexport default function NewPostPage() {\n  const [value, setValue] = useState({})\n  const {id} = useParams()\n  useEffect(() => {\n    getPostsById(id)\n    .then(result => {\n      setValue(result[0])\n      return console.log(value)\n    }).catch(error => {\n      return console.log(error.toString())\n    })\n  }, [])\n\n  return (\n    <SinglePostContainer>\n      <TitleContainer>\n        <Title>{value.title}</Title>\n        <CreatedAt>{new Date(value.createdAt).toLocaleTimeString()}</CreatedAt>\n      </TitleContainer>\n      <Body>{value.body}</Body>\n    </SinglePostContainer>\n  )\n}\n","import React, { useState, useContext } from \"react\"\nimport styled from \"styled-components\"\nimport { register, getMe } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../contexts'\n\nconst ErrorMessage = styled.div `\n  color: red;\n  margin-top: 20px;\n`\n\nconst Container = styled.div `\n  position: relative;\n  left: 50%;\n  transform: translate(-50%,0px);\n  width: 30vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 30px;\n  background: white;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-radius: 5px;\n  border: solid 0.5px rgb(0,0,0,0.2);\n`\n\nconst InputContainer = styled.div `\n  padding-top: 10px;\n  padding-bottom: 10px;\n`\n\nconst Button = styled.button `\n  padding: 6px 10px;\n  border: none;\n  border-radius: 2px;\n  background: rgb(0,0,0,0.15);\n  font-size: 20px;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%,0px);\n  margin-top:10px;\n`\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [nickname, setNickname] = useState('')\n  const [errorMessage, setErrormessage] = useState('')\n  const history = useHistory()\n\n  const handleSubmit = (event) => {\n    setErrormessage(null)\n    event.preventDefault()\n    register(username, password, nickname)\n    .then(data => {\n      if(data.ok === 0) {\n        return setErrormessage(data.message)\n      }\n      setAuthToken(data.token)\n      getMe().then(response => {\n        if (response.ok !== 1) {\n          setAuthToken(null)\n          return setErrormessage(response.toString())\n        }\n        setUser(response.data)\n        history.push('/')\n      })\n    })\n  }\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <InputContainer>\n          username:{\" \"}\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}></input>\n        </InputContainer>\n        <InputContainer>\n          password:{\" \"}\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}></input>\n        </InputContainer>\n        <InputContainer>\n          nickname:{\" \"}\n          <input type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)}></input>\n        </InputContainer>\n        <Button>註冊</Button>\n      </form>\n      { errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage> }\n    </Container>\n  )\n}","import React, { useContext } from \"react\"\nimport styled from \"styled-components\"\nimport {\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport { AuthContext } from '../../contexts'\nimport { setAuthToken } from '../../utils'\nimport { useHistory } from 'react-router-dom'\n\nconst HeaderContainer =styled.div `\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  position: fixed;\n  border-bottom: solid 0.1px rgb(0,0,0,0.2);\n  padding: 0px, 30px;\n  background: white;\n  box-shadow: 0.2px 0.2px 0.3px;\n`\n\nconst Brand = styled.div `\n  margin-left: 20px;\n  font-size: 32px;\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n`\n\nconst NavbarList = styled.div `\n  display: flex;\n  align-items: center;\n`\n\nconst Nav = styled(Link) ` \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 64px;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  transition: font-size 0.3s;\n\n  &:hover {\n    font-size:18px\n  }\n\n  ${(props) => \n    props.$active && `background: rgb(0,0,0,0.2)`\n  }\n`\n\nconst LeftContainer = styled.div `\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 32px;\n  }\n`\n\nexport default function Header() {\n  const location = useLocation()\n  const history = useHistory()\n  const { user, setUser } = useContext(AuthContext)\n\n  const handleLogout = () => {\n    setAuthToken('')\n    setUser(null)\n    if(location.pathname !== \"/\") {\n      history.push('/')\n    }\n  }\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand as={Link} to='/'>大家的部落格</Brand>\n        <NavbarList>\n          <Nav to='/' $active={location.pathname === '/'} >首頁</Nav>\n          <Nav to='/about' $active={location.pathname === '/about'} >關於</Nav>\n          { user && <Nav to='/new-post' $active={location.pathname === '/new-post'}>發布文章</Nav> }\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        { !user && <Nav to='/login' $active={location.pathname === '/login'}>登入</Nav> }\n        { !user && <Nav to='/register' $active={location.pathname === '/register'}>註冊</Nav> }\n        { user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from '../../pages/HomePage'\nimport AboutPage from '../../pages/AboutPage'\nimport LoginPage from '../../pages/LoginPage'\nimport NewPostPage from '../../pages/NewPostPage'\nimport SinglePostPage from '../../pages/SinglePostPage'\nimport RegisterPage from '../../pages/RegisterPage'\nimport Header from '../Header'\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\"\n\nconst CenterContainer = styled.div `\n  padding-top: 64px;\n  padding-bottom: 50px;\n`\n\nconst Footer = styled.div `\n  position: absolute;\n  bottom: 0px;\n  width: 100%;\n  height: 50px;\n  font-size: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgb(0,0,0,0.2);\n`\n\nexport default function App() {\n  const [user, setUser] = useState(null)\n  const [isLoadinGetMe, setIsLoadinGetMe] = useState(false)\n\n  useEffect(() => {\n    if(localStorage.getItem('token')) {\n      setIsLoadinGetMe(true)\n      getMe().then(response => {\n        if(response.ok) {\n          setUser(() => {\n            return response.data\n          })\n          setIsLoadinGetMe(false)\n        }\n      })\n    }\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{user, setUser}}>\n          <Router>\n            {!isLoadinGetMe && <Header /> }\n            {!isLoadinGetMe && (\n              <CenterContainer>\n                <Switch>\n                  <Route exact path=\"/\"> \n                    <HomePage/>\n                  </Route>\n                  <Route path=\"/about\"> \n                    <AboutPage />\n                  </Route>\n                  <Route path=\"/new-post\"> \n                    <NewPostPage />\n                  </Route>\n                  <Route path=\"/login\">\n                    <LoginPage />\n                  </Route>\n                  <Route path=\"/posts/:id\">\n                    <SinglePostPage />\n                  </Route>\n                  <Route path=\"/register\">\n                    <RegisterPage />\n                  </Route>\n                </Switch>\n              </CenterContainer>\n            )}\n            {!isLoadinGetMe && <Footer>Made by Ian!</Footer> }\n          </Router>\n    </AuthContext.Provider>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { ThemeProvider } from \"styled-components\"; //一個 <ThemeProvider>的外層 Component 來實踐換網站主題設計的系統\n\nconst theme = {\n  colors : {\n    light_gray : '#D0D0D0',\n    black : '#d40202',\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n      <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}